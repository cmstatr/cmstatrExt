[{"path":[]},{"path":"https://cmstatrExt.cmstatr.net/articles/compute-equiv-factors.html","id":"input","dir":"Articles","previous_headings":"Calculator","what":"Input","title":"Equivalency Factor Calculator","text":"Qualification Sample Size (\\(n\\)): Equivalency Sample Size (\\(m\\)): Significance (\\(\\alpha\\)):","code":""},{"path":[]},{"path":[]},{"path":"https://cmstatrExt.cmstatr.net/articles/compute-equiv-factors.html","id":"details","dir":"Articles","previous_headings":"","what":"Details","title":"Equivalency Factor Calculator","text":"Method Details Software Details Based user selected qualification sample size (\\(n\\)), equivalency sample size (\\(m\\)) significance level (\\(\\alpha\\)), factors \\(k_1\\) \\(k_2\\) calculated. Equivalency limits set : \\[ W_{min\\,indiv} = \\bar{x} - k_1 \\cdot s \\\\ W_{avg} = \\bar{x} - k_2 \\cdot s \\] power equivalency criteria investigated simulation. simulation, 2500 qualification samples drawn standard normal distribution (\\(N(\\mu, \\sigma)\\)) equivalency limits computed based qualification sample. Next 2500 equivalency samples drawn \\(N(\\mu-\\delta\\sigma, \\sigma)\\) distribution. equivalency samples compared equivalency limits proportion equivalency samples rejected reported. Thus, total 6,250,000 comparisons made. repeated several values \\(\\delta\\). functionality page provided C++ code used cmstatrExt R package. code compiled WebAssembly can run inside web browser without user installing special software. software licensed AGPL-3 license. Source code available . Graphing provided Plotly JavaScript library, licensed MIT license.","code":""},{"path":[]},{"path":"https://cmstatrExt.cmstatr.net/articles/compute-p-value-equiv.html","id":"input","dir":"Articles","previous_headings":"Calculator","what":"Input","title":"Equivalency p-Value Calculator","text":"Qualification Sample Mean (\\(\\bar{x}_{qual}\\)): Qualification Sample Standard Deviation (\\(s_{qual}\\)): Qualification Sample Size (\\(n\\)): Equivalency Sample Minimum (\\(x_{min\\,equiv}\\)): Equivalency Sample Mean (\\(\\bar{x}_{equiv}\\)): Equivalency Sample Size (\\(m\\)):","code":""},{"path":[]},{"path":"https://cmstatrExt.cmstatr.net/articles/compute-p-value-equiv.html","id":"details","dir":"Articles","previous_headings":"","what":"Details","title":"Equivalency p-Value Calculator","text":"Method Details Software Details Based user selected qualification sample statistics (\\(\\bar{x}_{qual}\\), \\(s_{qual}\\), \\(n\\)), equivalency sample statistics (\\(x_{min\\,equiv}\\), \\(\\bar{x}_{equiv}\\), \\(m\\)), following two statistics computed: \\[ t_1 = \\frac{\\bar{x}_{qual} - x_{min\\,equiv}}{s_{qual}} \\\\ t_2 = \\frac{\\bar{x}_{qual} - \\bar{x}_{equiv}}{s_{qual}} \\] statistics, p-Value computed. functionality page provided C++ code used cmstatrExt R package. code compiled WebAssembly can run inside web browser without user installing special software. software licensed AGPL-3 license. Source code available .","code":""},{"path":"https://cmstatrExt.cmstatr.net/articles/equivalency-p-values.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"p-Values for Equivalency","text":"dual acceptance criteria used composite materials accept reject new lot material (process change) based sample minimum sample mean new lot material. Acceptance limits normally set null hypothesis, equal probability rejecting lot due minimum rejecting lot due mean. acceptance limits set probability rejecting lot (due either minimum mean) null hypothesis \\(\\alpha\\). eliminate constraint equal probability rejecting lot due minimum mean, longer unique values acceptance limits: instead, can calculate p-value sample minimum sample mean compare p-value selected value \\(\\alpha\\). cmstatrExt package provides functions computing acceptance limits, p-values curves indicating values minimum mean result p-value. vignette demonstrates functionality. “two-sample” method sample statistics qualification data known. Caution: true mean population acceptance sample drawn higher population mean qualification distribution, using p-value method may declare acceptance sample equivalent even standard deviation larger. due fact statistical test one-sided test. Similarly, acceptance population much lower standard deviation qualification population, test may allow undesirable decrease mean. , considerable judgement required using method. vignette, ’ll use cmstatrExt package. ’ll also use tidyverse package data manipulation graphing. Finally, ’ll use one example data sets cmstatr package.","code":"library(cmstatrExt) library(tidyverse) library(cmstatr)"},{"path":"https://cmstatrExt.cmstatr.net/articles/equivalency-p-values.html","id":"example-data","dir":"Articles","previous_headings":"","what":"Example Data","title":"p-Values for Equivalency","text":"example, ’ll use RTD warp tension strength carbon.fabric.2 example data set cmstatr package. data follows: sample, can calculate following summary statistics strength:","code":"dat <- carbon.fabric.2 %>%   filter(condition == \"RTD\" & test == \"WT\") dat #>    test condition batch panel thickness nplies strength modulus failure_mode #> 1    WT       RTD     A     1     0.113     14  129.224   8.733          LAB #> 2    WT       RTD     A     1     0.112     14  144.702   8.934      LAT,LWB #> 3    WT       RTD     A     1     0.113     14  137.194   8.896          LAB #> 4    WT       RTD     A     1     0.113     14  139.728   8.835      LAT,LWB #> 5    WT       RTD     A     2     0.113     14  127.286   9.220          LAB #> 6    WT       RTD     A     2     0.111     14  129.261   9.463          LAT #> 7    WT       RTD     A     2     0.112     14  130.031   9.348          LAB #> 8    WT       RTD     B     1     0.111     14  140.038   9.244      LAT,LGM #> 9    WT       RTD     B     1     0.111     14  132.880   9.267          LWT #> 10   WT       RTD     B     1     0.113     14  132.104   9.198          LAT #> 11   WT       RTD     B     2     0.114     14  137.618   9.179      LAT,LAB #> 12   WT       RTD     B     2     0.113     14  139.217   9.123          LAB #> 13   WT       RTD     B     2     0.113     14  134.912   9.116          LAT #> 14   WT       RTD     B     2     0.111     14  141.558   9.434    LAB / LAT #> 15   WT       RTD     C     1     0.108     14  150.242   9.451          LAB #> 16   WT       RTD     C     1     0.109     14  147.053   9.391          LGM #> 17   WT       RTD     C     1     0.111     14  145.001   9.318      LAT,LWB #> 18   WT       RTD     C     1     0.113     14  135.686   8.991    LAT / LAB #> 19   WT       RTD     C     1     0.112     14  136.075   9.221          LAB #> 20   WT       RTD     C     2     0.114     14  143.738   8.803      LAT,LGM #> 21   WT       RTD     C     2     0.113     14  143.715   8.893      LAT,LAB #> 22   WT       RTD     C     2     0.113     14  147.981   8.974      LGM,LWB #> 23   WT       RTD     C     2     0.112     14  148.418   9.118      LAT,LWB #> 24   WT       RTD     C     2     0.113     14  135.435   9.217      LAT/LAB #> 25   WT       RTD     C     2     0.113     14  146.285   8.920      LWT/LWB #> 26   WT       RTD     C     2     0.111     14  139.078   9.015          LAT #> 27   WT       RTD     C     2     0.112     14  146.825   9.036      LAT/LWT #> 28   WT       RTD     C     2     0.110     14  148.235   9.336      LWB/LAB qual <- dat %>%   summarise(n = n(), mean = mean(strength), sd = sd(strength)) qual #>    n     mean       sd #> 1 28 139.6257 6.716047"},{"path":"https://cmstatrExt.cmstatr.net/articles/equivalency-p-values.html","id":"acceptance-limits","dir":"Articles","previous_headings":"","what":"Acceptance Limits","title":"p-Values for Equivalency","text":"can calculate acceptance factors acceptance sample size 8 \\(alpha=0.05\\) using cmstatrExt package follows: factors can transformed limits using following equations: \\[ W_{indiv} = \\bar{x}_{qual} - k_1 s_{qual} \\\\ W_{mean} = \\bar{x}_{qual} - k_2 s_{qual} \\] Implementing R: , acceptance sample minimum individual less 119.8 mean less 134.3, reject .","code":"k <- k_equiv_two_sample(0.05, qual$n, 8) k #> [1] 2.9462891 0.7972005 acceptance_limits <- qual$mean - k * qual$sd acceptance_limits #> [1] 119.8383 134.2717"},{"path":"https://cmstatrExt.cmstatr.net/articles/equivalency-p-values.html","id":"p-value","dir":"Articles","previous_headings":"","what":"p-Value","title":"p-Values for Equivalency","text":"might ask happens ’s one low value acceptance sample ’s acceptance limit minimum individual, mean well limit. naive response reject sample. , acceptance limits just calculated based setting equal probability rejecting sample based minimum mean null hypothesis — pairs minimum mean values p-value acceptance limits calculated. order use p-value function cmstatrExt package, need apply following transformation: \\[ t_1 = \\frac{\\bar{x}_{qual} - x_{acceptance\\,(1)}}{s_{qual}} \\\\ t_2 = \\frac{\\bar{x}_{qual} - \\bar{x}_{acceptance}}{s_{qual}} \\] demonstration, let’s first calculate p-value acceptance limits. get \\(p=\\alpha\\). value close \\(\\alpha=0.05\\) — within expected numeric precision. Now, let’s consider case sample minimum 116 mean 138. sample minimum acceptance limit (116 < 120), sample mean well acceptance limit (138 > 134). Let’s calculate p-value case: Since value well selected value \\(\\alpha=0.05\\), accept sample. sort analysis can useful site- process-equivalency programs, MRB activities.","code":"p_equiv_two_sample(   n = qual$n,   m = 8,   t1 = (qual$mean - acceptance_limits[1]) / qual$sd,   t2 = (qual$mean - acceptance_limits[2]) / qual$sd ) #> [1] 0.05003139 p_equiv_two_sample(   n = qual$n,   m = 8,   t1 = (qual$mean - 116) / qual$sd,   t2 = (qual$mean - 138) / qual$sd ) #> [1] 0.2771053"},{"path":"https://cmstatrExt.cmstatr.net/articles/equivalency-p-values.html","id":"curves-of-constant-p-values","dir":"Articles","previous_headings":"","what":"Curves of Constant p-Values","title":"p-Values for Equivalency","text":"cmstatrExt package provides function produces data.frame containing values \\(t_1\\) \\(t_2\\) result p-value. can create data.frame p-values 0.05 follows: can plot curve using ggplot2, part tidyverse package:  plot , make sure use geom_path geom_line. former plot points order given; latter plot points ascending order x variable, can cause problems vertical portion graph. Let’s overlay acceptance limits calculated k_equiv_two_sample function well values t_1 t_2 sample discussed previous section.  better yet, can transform back engineering units:","code":"curve <- iso_equiv_two_sample(qual$n, 8, 0.05, 4, 1.5, 10) curve #>          t1        t2 #> 1  4.000000 0.6876226 #> 2  3.870890 0.6892186 #> 3  3.742796 0.6924106 #> 4  3.616481 0.6971987 #> 5  3.492200 0.7027848 #> 6  3.372239 0.7115630 #> 7  3.258124 0.7235332 #> 8  3.152269 0.7394934 #> 9  3.056580 0.7594437 #> 10 2.975250 0.7849802 #> 11 2.880451 0.8321028 #> 12 2.825808 0.8732404 #> 13 2.782601 0.9266275 #> 14 2.749561 0.9895908 #> 15 2.726687 1.0602149 #> 16 2.713980 1.1365848 #> 17 2.706355 1.2156679 #> 18 2.701272 1.2961076 #> 19 2.701272 1.3776646 #> 20 2.698730 1.4591417 curve %>%   ggplot(aes(x = t1, y = t2)) +   geom_path() +   ggtitle(\"Acceptance criteria for alpha=0.05\") curve %>%   ggplot(aes(x = t1, y = t2)) +   geom_path() +   geom_hline(yintercept = k[2], color = \"red\") +   geom_vline(xintercept = k[1], color = \"red\") +   geom_point(data = data.frame(     t1 = (qual$mean - 116) / qual$sd,     t2 = (qual$mean - 138) / qual$sd   ),   shape = \"*\", size = 5) +   ggtitle(\"Acceptance criteria for alpha=0.05\") curve %>%   mutate(x_min = qual$mean - t1 * qual$sd,          x_mean = qual$mean - t2 * qual$sd) %>%   ggplot(aes(x = x_min, y = x_mean)) +   geom_path() +   geom_hline(yintercept = acceptance_limits[2], color = \"red\") +   geom_vline(xintercept = acceptance_limits[1], color = \"red\") +   geom_point(data = data.frame(     x_min = 116,     x_mean = 138   ),   shape = \"*\", size = 5) +   ggtitle(\"Acceptance criteria for alpha=0.05\")"},{"path":"https://cmstatrExt.cmstatr.net/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Stefan Kloppenborg. Author, maintainer.","code":""},{"path":"https://cmstatrExt.cmstatr.net/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kloppenborg S (2023). cmstatrExt: Statistical Methods Composite Material Data. https://github.com/cmstatr/cmstatrExt, https://cmstatr.github.io/cmstatrExt/.","code":"@Manual{,   title = {cmstatrExt: More Statistical Methods for Composite Material Data},   author = {Stefan Kloppenborg},   year = {2023},   note = {https://github.com/cmstatr/cmstatrExt, https://cmstatr.github.io/cmstatrExt/}, }"},{"path":"https://cmstatrExt.cmstatr.net/index.html","id":"cmstatrext-","dir":"","previous_headings":"","what":"More Statistical Methods for Composite Material Data","title":"More Statistical Methods for Composite Material Data","text":"cmstatrExt provides statistical methods intended composite material data included CMH-17-1G.","code":""},{"path":"https://cmstatrExt.cmstatr.net/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"More Statistical Methods for Composite Material Data","text":"package yet ready submitted CRAN. can, however, install GitHub using following code:","code":"devtools::install_github(\"cmstatr/cmstatrExt\")"},{"path":"https://cmstatrExt.cmstatr.net/index.html","id":"example-usage","dir":"","previous_headings":"","what":"Example Usage","title":"More Statistical Methods for Composite Material Data","text":"examples ’ll use following packages: Currently, package provides several functions related equivalency tests. Factors two-sample dual-acceptance criteria can calculated follows: power test detecting reduction mean can computed follows:","code":"library(cmstatrExt) library(tidyverse) k <- k_equiv_two_sample(   alpha = 0.05,   n = 18,  # size of the qualification sample   m = 6    # size of the acceptance sample ) k #> [1] 2.9594727 0.9541395 power_sim_dual(   n_qual = 18,   m_equiv = 6,   replicates = 2500,   distribution = \"rnorm\",   param_qual = data.frame(mean = 0, sd = 1),   param_equiv = data.frame(mean = seq(-2, 0, length.out = 11), sd = 1),   k1 = k[1], k2 = k[2] ) %>%    mutate(delta = 0 - mean) %>%    ggplot(aes(x = delta, y = `Rejection Rate`)) +   geom_line()"},{"path":"https://cmstatrExt.cmstatr.net/index.html","id":"development","dir":"","previous_headings":"","what":"Development","title":"More Statistical Methods for Composite Material Data","text":"package active development. suggestion question, please create issue GitHub. want contribute package, Pull Requests welcome!","code":""},{"path":"https://cmstatrExt.cmstatr.net/reference/cmstatrExt-package.html","id":null,"dir":"Reference","previous_headings":"","what":"cmstatrExt: More Statistical Methods for Composite Material Data — cmstatrExt-package","title":"cmstatrExt: More Statistical Methods for Composite Material Data — cmstatrExt-package","text":"cmstatrExt package contains statistical methods can used composite material data, contained within CMH-17.","code":""},{"path":[]},{"path":"https://cmstatrExt.cmstatr.net/reference/cmstatrExt-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"cmstatrExt: More Statistical Methods for Composite Material Data — cmstatrExt-package","text":"Maintainer: Stefan Kloppenborg stefan@kloppenborg.ca","code":""},{"path":"https://cmstatrExt.cmstatr.net/reference/iso_equiv_two_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate t1 and t2 pairs that have the same p-Value — iso_equiv_two_sample","title":"Calculate t1 and t2 pairs that have the same p-Value — iso_equiv_two_sample","text":"Calculates pairs t1 t2 values, p-value two-sample equivalency test. See p_equiv_two_sample().","code":""},{"path":"https://cmstatrExt.cmstatr.net/reference/iso_equiv_two_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate t1 and t2 pairs that have the same p-Value — iso_equiv_two_sample","text":"","code":"iso_equiv_two_sample(n, m, alpha, t1max, t2max, n_points)"},{"path":"https://cmstatrExt.cmstatr.net/reference/iso_equiv_two_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate t1 and t2 pairs that have the same p-Value — iso_equiv_two_sample","text":"n size qualification sample m size equivalency sample alpha desired p-value t1max maximum value t1 (approximate) t2max maximum value t2 (approximate) n_points number returned points twice n_points","code":""},{"path":"https://cmstatrExt.cmstatr.net/reference/iso_equiv_two_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate t1 and t2 pairs that have the same p-Value — iso_equiv_two_sample","text":"data.frame values t1 t2","code":""},{"path":"https://cmstatrExt.cmstatr.net/reference/iso_equiv_two_sample.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate t1 and t2 pairs that have the same p-Value — iso_equiv_two_sample","text":"values t1 t2 based transformation: t1 = (X_mean - Y_min) / S t2 = (X_mean - Y_mean) / S : X_mean mean qualification sample S standard deviation qualification sample Y_min minimum acceptance sample Y_mean mean acceptance sample","code":""},{"path":"https://cmstatrExt.cmstatr.net/reference/iso_equiv_two_sample.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate t1 and t2 pairs that have the same p-Value — iso_equiv_two_sample","text":"Kloppenborg, S. (2023). Lot acceptance testing using sample mean extremum finite qualification samples. Journal Quality Technology, https://doi.org/10.1080/00224065.2022.2147884","code":""},{"path":[]},{"path":"https://cmstatrExt.cmstatr.net/reference/iso_equiv_two_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate t1 and t2 pairs that have the same p-Value — iso_equiv_two_sample","text":"","code":"if (FALSE) { library(cmstatrExt) library(tidyverse) curve <- iso_equiv_two_sample(24, 8, 0.05, 4, 1.5, 10) curve  curve %>%   ggplot(aes(x = t1, y = t2)) +     geom_path() +     ggtitle(\"Acceptance criteria for alpha=0.05\") }"},{"path":"https://cmstatrExt.cmstatr.net/reference/k_equiv_two_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the factors for a two-sample acceptance test — k_equiv_two_sample","title":"Calculate the factors for a two-sample acceptance test — k_equiv_two_sample","text":"Calculates factors k1 k2, used setting acceptance values lot acceptance. factors consider size qualification sample (n) size acceptance sample (m). test detailed forthcoming paper.","code":""},{"path":"https://cmstatrExt.cmstatr.net/reference/k_equiv_two_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the factors for a two-sample acceptance test — k_equiv_two_sample","text":"","code":"k_equiv_two_sample(alpha, n, m)"},{"path":"https://cmstatrExt.cmstatr.net/reference/k_equiv_two_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the factors for a two-sample acceptance test — k_equiv_two_sample","text":"alpha desired probability Type 1 error n size qualification sample m size acceptance sample","code":""},{"path":"https://cmstatrExt.cmstatr.net/reference/k_equiv_two_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the factors for a two-sample acceptance test — k_equiv_two_sample","text":"vector length 2 contents c(k1, k2)","code":""},{"path":"https://cmstatrExt.cmstatr.net/reference/k_equiv_two_sample.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate the factors for a two-sample acceptance test — k_equiv_two_sample","text":"Kloppenborg, S. (2023). Lot acceptance testing using sample mean extremum finite qualification samples. Journal Quality Technology, https://doi.org/10.1080/00224065.2022.2147884","code":""},{"path":"https://cmstatrExt.cmstatr.net/reference/p_equiv.html","id":null,"dir":"Reference","previous_headings":"","what":"p-Value for one-sample equivalency — p_equiv","title":"p-Value for one-sample equivalency — p_equiv","text":"Calculates p-Value one-sample acceptance test based Vangel (2002). test considers sample size acceptance sample (m). Two test statistics required: t1 = (mu - Y_min) / sigma t2 = (mu - Y_mean) / sigma : mu mean population sigma standard deviation population Y_min minimum acceptance sample Y_mean mean acceptance sample","code":""},{"path":"https://cmstatrExt.cmstatr.net/reference/p_equiv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"p-Value for one-sample equivalency — p_equiv","text":"","code":"p_equiv(m, t1, t2)"},{"path":"https://cmstatrExt.cmstatr.net/reference/p_equiv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"p-Value for one-sample equivalency — p_equiv","text":"m size acceptance sample t1 test statistic described . May vector. t2 test statistic described . May vector.","code":""},{"path":"https://cmstatrExt.cmstatr.net/reference/p_equiv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"p-Value for one-sample equivalency — p_equiv","text":"vector p-Values length t1 t2","code":""},{"path":"https://cmstatrExt.cmstatr.net/reference/p_equiv_two_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"p-Value for two-sample equivalency — p_equiv_two_sample","title":"p-Value for two-sample equivalency — p_equiv_two_sample","text":"Calculates p-Value two-sample acceptance test. test considers sample size qualification sample (n) acceptance sample (m). Two test statistics required: t1 = (X_mean - Y_min) / S t2 = (X_mean - Y_mean) / S : X_mean mean qualification sample S standard deviation qualification sample Y_min minimum acceptance sample Y_mean mean acceptance sample","code":""},{"path":"https://cmstatrExt.cmstatr.net/reference/p_equiv_two_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"p-Value for two-sample equivalency — p_equiv_two_sample","text":"","code":"p_equiv_two_sample(n, m, t1, t2)"},{"path":"https://cmstatrExt.cmstatr.net/reference/p_equiv_two_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"p-Value for two-sample equivalency — p_equiv_two_sample","text":"n size qualification sample m size acceptance sample t1 test statistic described . May vector. t2 test statistic described . May vector.","code":""},{"path":"https://cmstatrExt.cmstatr.net/reference/p_equiv_two_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"p-Value for two-sample equivalency — p_equiv_two_sample","text":"vector p-Values length t1 t2","code":""},{"path":"https://cmstatrExt.cmstatr.net/reference/power_sim_dual.html","id":null,"dir":"Reference","previous_headings":"","what":"Rejection rate for dual acceptance criteria based via simulation — power_sim_dual","title":"Rejection rate for dual acceptance criteria based via simulation — power_sim_dual","text":"Performs Monte Carlo simulation determine rejection rate dual acceptance criteria (based sample minimum mean). specifying several sets parameters \"equivalency\" distribution, power curve acceptance test can determined.","code":""},{"path":"https://cmstatrExt.cmstatr.net/reference/power_sim_dual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rejection rate for dual acceptance criteria based via simulation — power_sim_dual","text":"","code":"power_sim_dual(   n_qual,   m_equiv,   replicates,   distribution = \"rnorm\",   param_qual,   param_equiv,   k1,   k2 )"},{"path":"https://cmstatrExt.cmstatr.net/reference/power_sim_dual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rejection rate for dual acceptance criteria based via simulation — power_sim_dual","text":"n_qual sample size qualification sample m_equiv sample size equivalency/acceptance sample replicates number simulated qualification samples equivalency samples. single value given, numbers used , vector length two given, first element number qualification replicates second element number equivalency replicates. distribution function name generating random sample (defaults \"rnorm\") param_qual data.frame (must single row) columns matching arguments distribution function param_equiv data.frame columns matching arguments distribution function. simulation repeated parameters specified row data.frame. k1 factor determining acceptance criterion sample minimum, calculated mean_qual - k1 * sd_qual k2 factor determining acceptance criterion sample average, calculated mean_qual - k2 * sd_qual","code":""},{"path":"https://cmstatrExt.cmstatr.net/reference/power_sim_dual.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rejection rate for dual acceptance criteria based via simulation — power_sim_dual","text":"function performs simulation estimate performance dual acceptance criteria commonly used composite materials aerospace applications. criteria based setting lower limits minimum individual (lower extremum) mean \"acceptance\" sample. limits computed based sample mean sample standard deviation initial \"qualification\" sample. criteria intended test non-inferiority determine material lots \"acceptance\" samples drawn accepted production. Another common use criteria determine process change, equipment change, second manufacturing site acceptable production. set distribution parameters given rows param_equiv, number samples size m_equiv generated using function distribution. Next, number qualification samples size n_qual generated using distribution function parameters given param_qual. Limits minimum average determined qualification sample. equivalency sample compared limits determined qualification sample. number replicate simulation given replicates: vector length two, first element number qualification samples second number equivalency samples; replicates single value, number used number qualification samples acceptance samples. Therefore, row param_equiv total replicates[1] * replicates[2] criteria evaluated. argument distribution must correspond function generates (pseudo) random numbers. function must argument n specifies sample size generated. argument distribution matches certain common distribution functions (rnorm), C++ implementation random number generation function used instead calling R code, results significant speedup.","code":""},{"path":[]},{"path":"https://cmstatrExt.cmstatr.net/reference/power_sim_dual.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rejection rate for dual acceptance criteria based via simulation — power_sim_dual","text":"","code":"# Compute a power curve for a dual acceptance criteria for a qualification # sample size of 18 and an equivalency sample size of 6, using 2000 # replicates. A standard normal distribution is used and the power to # detect a decrease in mean is determined. set.seed(12345) # make it reproducible power_sim_dual(   18, 6,   2000,   \"rnorm\",   data.frame(mean = 0, sd = 1),   data.frame(mean = c(-2, -1.5, -1, 0.5, 0), sd = 1),   2.959, 0.954 ) #>   mean sd Rejection Rate #> 1 -2.0  1     0.98349975 #> 2 -1.5  1     0.88186900 #> 3 -1.0  1     0.56382425 #> 4  0.5  1     0.00864025 #> 5  0.0  1     0.04826250 ##   mean sd Rejection Rate ## 1 -2.0  1     0.98349975 ## 2 -1.5  1     0.88186900 ## 3 -1.0  1     0.56382425 ## 4  0.5  1     0.00864025 ## 5  0.0  1     0.04826250"},{"path":"https://cmstatrExt.cmstatr.net/news/index.html","id":"version-021","dir":"Changelog","previous_headings":"","what":"Version 0.2.1","title":"Version 0.2.1","text":"Update p-value vignette","code":""},{"path":"https://cmstatrExt.cmstatr.net/news/index.html","id":"version-020","dir":"Changelog","previous_headings":"","what":"Version 0.2.0","title":"Version 0.2.0","text":"Created p-value calculator website Added iso_equiv_two_sample function Created p-value vignette Added unit integration tests","code":""},{"path":"https://cmstatrExt.cmstatr.net/news/index.html","id":"version-010","dir":"Changelog","previous_headings":"","what":"Version 0.1.0","title":"Version 0.1.0","text":"Documentation improvements Added equivalency/acceptance factor calculator website","code":""},{"path":"https://cmstatrExt.cmstatr.net/news/index.html","id":"version-010-1","dir":"Changelog","previous_headings":"","what":"Version 0.1.0","title":"Version 0.1.0","text":"Added power simulation function Added documentation website Changed c++ unit test framework testthat (uses catch2) Improved speed numerical integration","code":""},{"path":"https://cmstatrExt.cmstatr.net/news/index.html","id":"version-001","dir":"Changelog","previous_headings":"","what":"Version 0.0.1","title":"Version 0.0.1","text":"First public release","code":""}]
