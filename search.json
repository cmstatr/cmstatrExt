[{"path":"https://cmstatr.github.io/cmstatrExt/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Stefan Kloppenborg. Author, maintainer.","code":""},{"path":"https://cmstatr.github.io/cmstatrExt/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kloppenborg S (2023). cmstatrExt: Statistical Methods Composite Material Data. https://github.com/cmstatr/cmstatrExt, https://cmstatr.github.io/cmstatrExt/.","code":"@Manual{,   title = {cmstatrExt: More Statistical Methods for Composite Material Data},   author = {Stefan Kloppenborg},   year = {2023},   note = {https://github.com/cmstatr/cmstatrExt, https://cmstatr.github.io/cmstatrExt/}, }"},{"path":"https://cmstatr.github.io/cmstatrExt/index.html","id":"cmstatrext","dir":"","previous_headings":"","what":"More Statistical Methods for Composite Material Data","title":"More Statistical Methods for Composite Material Data","text":"cmstatrExt provides statistical methods intended composite material data included CMH-17-1G.","code":""},{"path":"https://cmstatr.github.io/cmstatrExt/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"More Statistical Methods for Composite Material Data","text":"package yet ready submitted CRAN. can, however, install GitHub using following code:","code":"devtools::install_github(\"cmstatr/cmstatrExt\")"},{"path":"https://cmstatr.github.io/cmstatrExt/index.html","id":"example-usage","dir":"","previous_headings":"","what":"Example Usage","title":"More Statistical Methods for Composite Material Data","text":"examples ’ll use following packages: Currently, package provides several functions related equivalency tests. Factors two-sample dual-acceptance criteria can calculated follows: power test detecting reduction mean can computed follows:","code":"library(cmstatrExt) library(tidyverse) k <- k_equiv_two_sample(   alpha = 0.05,   n = 18,  # size of the qualification sample   m = 6    # size of the acceptance sample ) k #> [1] 2.9594727 0.9541395 power_sim_dual(   n_qual = 18,   m_equiv = 6,   replicates = 2500,   distribution = \"rnorm\",   param_qual = data.frame(mean = 0, sd = 1),   param_equiv = data.frame(mean = seq(-2, 0, length.out = 11), sd = 1),   k1 = k[1], k2 = k[2] ) %>%    mutate(delta = 0 - mean) %>%    ggplot(aes(x = delta, y = `Rejection Rate`)) +   geom_line()"},{"path":"https://cmstatr.github.io/cmstatrExt/index.html","id":"development","dir":"","previous_headings":"","what":"Development","title":"More Statistical Methods for Composite Material Data","text":"package active development. suggestion question, please create issue GitHub. want contribute package, Pull Requests welcome!","code":""},{"path":"https://cmstatr.github.io/cmstatrExt/reference/cmstatrExt-package.html","id":null,"dir":"Reference","previous_headings":"","what":"cmstatrExt: More Statistical Methods for Composite Material Data — cmstatrExt-package","title":"cmstatrExt: More Statistical Methods for Composite Material Data — cmstatrExt-package","text":"cmstatrExt package contains statistical methods can used composite material data, contained within CMH-17.","code":""},{"path":[]},{"path":"https://cmstatr.github.io/cmstatrExt/reference/cmstatrExt-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"cmstatrExt: More Statistical Methods for Composite Material Data — cmstatrExt-package","text":"Maintainer: Stefan Kloppenborg stefan@kloppenborg.ca","code":""},{"path":"https://cmstatr.github.io/cmstatrExt/reference/k_equiv_two_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the factors for a two-sample acceptance test — k_equiv_two_sample","title":"Calculate the factors for a two-sample acceptance test — k_equiv_two_sample","text":"Calculates factors k1 k2, used setting acceptance values lot acceptance. factors consider size qualification sample (n) size acceptance sample (m). test detailed forthcoming paper.","code":""},{"path":"https://cmstatr.github.io/cmstatrExt/reference/k_equiv_two_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the factors for a two-sample acceptance test — k_equiv_two_sample","text":"","code":"k_equiv_two_sample(alpha, n, m)"},{"path":"https://cmstatr.github.io/cmstatrExt/reference/k_equiv_two_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the factors for a two-sample acceptance test — k_equiv_two_sample","text":"alpha desired probability Type 1 error n size qualification sample m size acceptance sample","code":""},{"path":"https://cmstatr.github.io/cmstatrExt/reference/k_equiv_two_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the factors for a two-sample acceptance test — k_equiv_two_sample","text":"vector length 2 contents c(k1, k2)","code":""},{"path":"https://cmstatr.github.io/cmstatrExt/reference/p_equiv.html","id":null,"dir":"Reference","previous_headings":"","what":"p-Value for one-sample equivalency — p_equiv","title":"p-Value for one-sample equivalency — p_equiv","text":"Calculates p-Value one-sample acceptance test based Vangel (2002). test considers sample size acceptance sample (m). Two test statistics required: t1 = (mu - Y_min) / sigma t2 = (mu - Y_mean) / sigma : mu mean population sigma standard deviation population Y_min minimum acceptance sample Y_mean mean acceptance sample","code":""},{"path":"https://cmstatr.github.io/cmstatrExt/reference/p_equiv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"p-Value for one-sample equivalency — p_equiv","text":"","code":"p_equiv(m, t1, t2)"},{"path":"https://cmstatr.github.io/cmstatrExt/reference/p_equiv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"p-Value for one-sample equivalency — p_equiv","text":"m size acceptance sample t1 test statistic described . May vector. t2 test statistic described . May vector.","code":""},{"path":"https://cmstatr.github.io/cmstatrExt/reference/p_equiv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"p-Value for one-sample equivalency — p_equiv","text":"vector p-Values length t1 t2","code":""},{"path":"https://cmstatr.github.io/cmstatrExt/reference/p_equiv_two_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"p-Value for two-sample equivalency — p_equiv_two_sample","title":"p-Value for two-sample equivalency — p_equiv_two_sample","text":"Calculates p-Value two-sample acceptance test. test considers sample size qualification sample (n) acceptance sample (m). Two test statistics required: t1 = (X_mean - Y_min) / S t2 = (X_mean - Y_mean) / S : X_mean mean qualification sample S standard deviation qualification sample Y_min minimum acceptance sample Y_mean mean acceptance sample","code":""},{"path":"https://cmstatr.github.io/cmstatrExt/reference/p_equiv_two_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"p-Value for two-sample equivalency — p_equiv_two_sample","text":"","code":"p_equiv_two_sample(n, m, t1, t2)"},{"path":"https://cmstatr.github.io/cmstatrExt/reference/p_equiv_two_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"p-Value for two-sample equivalency — p_equiv_two_sample","text":"n size qualification sample m size acceptance sample t1 test statistic described . May vector. t2 test statistic described . May vector.","code":""},{"path":"https://cmstatr.github.io/cmstatrExt/reference/p_equiv_two_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"p-Value for two-sample equivalency — p_equiv_two_sample","text":"vector p-Values length t1 t2","code":""},{"path":"https://cmstatr.github.io/cmstatrExt/reference/power_sim_dual.html","id":null,"dir":"Reference","previous_headings":"","what":"Rejection rate for dual acceptance criteria based via simulation — power_sim_dual","title":"Rejection rate for dual acceptance criteria based via simulation — power_sim_dual","text":"Performs Monte Carlo simulation determine rejection rate dual acceptance criteria (based sample minimum mean). specifying several sets parameters \"equivalency\" distribution, power curve acceptance test can determined.","code":""},{"path":"https://cmstatr.github.io/cmstatrExt/reference/power_sim_dual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rejection rate for dual acceptance criteria based via simulation — power_sim_dual","text":"","code":"power_sim_dual(   n_qual,   m_equiv,   replicates,   distribution = \"rnorm\",   param_qual,   param_equiv,   k1,   k2 )"},{"path":"https://cmstatr.github.io/cmstatrExt/reference/power_sim_dual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rejection rate for dual acceptance criteria based via simulation — power_sim_dual","text":"n_qual sample size qualification sample m_equiv sample size equivalency/acceptance sample replicates number simulated qualification samples equivalency samples. single value given, numbers used , vector length two given, first element number qualification replicates second element number equivalency replicates. distribution function name generating random sample (defaults \"rnorm\") param_qual data.frame (must single row) columns matching arguments distribution function param_equiv data.frame columns matching arguments distribution function. simulation repeated parameters specified row data.frame. k1 factor determining acceptance criterion sample minimum, calculated mean_qual - k1 * sd_qual k2 factor determining acceptance criterion sample average, calculated mean_qual - k2 * sd_qual","code":""},{"path":"https://cmstatr.github.io/cmstatrExt/reference/power_sim_dual.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rejection rate for dual acceptance criteria based via simulation — power_sim_dual","text":"function performs simulation estimate performance dual acceptance criteria commonly used composite materials aerospace applications. criteria based setting lower limits minimum individual (lower extremum) mean \"acceptance\" sample. limits computed based sample mean sample standard deviation initial \"qualification\" sample. criteria intended test non-inferiority determine material lots \"acceptance\" samples drawn accepted production. Another common use criteria determine process change, equipment change, second manufacturing site acceptable production. set distribution parameters given rows param_equiv, number samples size m_equiv generated using function distribution. Next, number qualification samples size n_qual generated using distribution function parameters given param_qual. Limits minimum average determined qualification sample. equivalency sample compared limits determined qualification sample. number replicate simulation given replicates: vector length two, first element number qualification samples second number equivalency samples; replicates single value, number used number qualification samples acceptance samples. Therefore, row param_equiv total replicates[1] * replicates[2] criteria evaluated. argument distribution must correspond function generates (pseudo) random numbers. function must argument n specifies sample size generated. argument distribution matches certain common distribution functions (rnorm), C++ implementation random number generation function used instead calling R code, results significant speedup.","code":""},{"path":[]},{"path":"https://cmstatr.github.io/cmstatrExt/reference/power_sim_dual.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rejection rate for dual acceptance criteria based via simulation — power_sim_dual","text":"","code":"# Compute a power curve for a dual acceptance criteria for a qualification # sample size of 18 and an equivalency sample size of 6, using 2000 # replicates. A standard normal distribution is used and the power to # detect a decrease in mean is determined. set.seed(12345) # make it reproducible power_sim_dual(   18, 6,   2000,   \"rnorm\",   data.frame(mean = 0, sd = 1),   data.frame(mean = c(-2, -1.5, -1, 0.5, 0), sd = 1),   2.959, 0.954 ) #>   mean sd Rejection Rate #> 1 -2.0  1     0.98349975 #> 2 -1.5  1     0.88186900 #> 3 -1.0  1     0.56382425 #> 4  0.5  1     0.00864025 #> 5  0.0  1     0.04826250 ##   mean sd Rejection Rate ## 1 -2.0  1     0.98349975 ## 2 -1.5  1     0.88186900 ## 3 -1.0  1     0.56382425 ## 4  0.5  1     0.00864025 ## 5  0.0  1     0.04826250"},{"path":"https://cmstatr.github.io/cmstatrExt/news/index.html","id":"version-010","dir":"Changelog","previous_headings":"","what":"Version 0.1.0","title":"Version 0.1.0","text":"Added power simulation function Added documentation website Changed c++ unit test framework testthat (uses catch2) Improved speed numerical integration","code":""},{"path":"https://cmstatr.github.io/cmstatrExt/news/index.html","id":"version-001","dir":"Changelog","previous_headings":"","what":"Version 0.0.1","title":"Version 0.0.1","text":"First public release","code":""}]
